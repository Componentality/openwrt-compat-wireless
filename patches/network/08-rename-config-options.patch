This file renames CONFIG_ options that may be defined in older
kernels but that we know we can *safely* rename to other config
option names to ensure we disable building these options at
through this framework. An example here is ath9k's rate control
aglorithm is always selected by default via CONFIG_ATH9K_RATE_CONTROL.
By renaming this to CONFIG_COMPAT_ATH9K_RATE_CONTROL we have
the flexibility to disable it for a replacement driver.

In kernel 2.6.26 and older CONFIG_IWL4965 was build as an extra
module, but now it is directly included in the iwlagn.

CONFIG_IWL4965 has to be set to y, to build correctly.

zd1211rw does not build with kernel < 2.6.28, but it is often activated 
in the kernel config of older kernels. We rename the option to 
deactivate it on older kernels.
CONFIG_BT_L2CAP and CONFIG_BT_SCO are boolean now, but often set to m 
in the kernel config.

CONFIG_BT_HIDP does not build with older kernel versions.

--- a/drivers/net/wireless/Makefile
+++ b/drivers/net/wireless/Makefile
@@ -21,7 +21,7 @@ obj-$(CONFIG_PRISM54)		+= prism54/
 obj-$(CONFIG_HOSTAP)		+= hostap/
 obj-$(CONFIG_B43)		+= b43/
 obj-$(CONFIG_B43LEGACY)		+= b43legacy/
-obj-$(CONFIG_ZD1211RW)		+= zd1211rw/
+obj-$(CONFIG_COMPAT_ZD1211RW)		+= zd1211rw/
 obj-$(CONFIG_RTL8180)		+= rtl818x/
 obj-$(CONFIG_RTL8187)		+= rtl818x/
 obj-$(CONFIG_RTLWIFI)		+= rtlwifi/
--- a/drivers/net/wireless/iwlegacy/Makefile
+++ b/drivers/net/wireless/iwlegacy/Makefile
@@ -5,7 +5,7 @@ iwlegacy-$(CONFIG_IWLEGACY_DEBUGFS) += d
 iwlegacy-objs += $(iwlegacy-m)
 
 # 4965
-obj-$(CONFIG_IWL4965)	+= iwl4965.o
+obj-$(CONFIG_COMPAT_IWL4965)	+= iwl4965.o
 iwl4965-objs		:= 4965.o 4965-mac.o 4965-rs.o 4965-calib.o
 iwl4965-$(CONFIG_IWLEGACY_DEBUGFS) += 4965-debug.o
 
--- a/drivers/net/wireless/iwlegacy/common.h
+++ b/drivers/net/wireless/iwlegacy/common.h
@@ -1352,7 +1352,7 @@ struct il_priv {
 
 		} _3945;
 #endif
-#if defined(CONFIG_IWL4965) || defined(CONFIG_IWL4965_MODULE)
+#if defined(CONFIG_COMPAT_IWL4965) || defined(CONFIG_COMPAT_IWL4965_MODULE)
 		struct {
 			struct il_rx_phy_res last_phy_res;
 			bool last_phy_res_valid;
--- a/drivers/net/wireless/libertas/Makefile
+++ b/drivers/net/wireless/libertas/Makefile
@@ -17,5 +17,5 @@ libertas_spi-objs += if_spi.o
 obj-$(CONFIG_LIBERTAS)     += libertas.o
 obj-$(CONFIG_LIBERTAS_USB) += usb8xxx.o
 obj-$(CONFIG_LIBERTAS_CS)  += libertas_cs.o
-obj-$(CONFIG_LIBERTAS_SDIO) += libertas_sdio.o
+obj-$(CONFIG_COMPAT_LIBERTAS_SDIO) += libertas_sdio.o
 obj-$(CONFIG_LIBERTAS_SPI) += libertas_spi.o
--- a/drivers/net/wireless/zd1211rw/Makefile
+++ b/drivers/net/wireless/zd1211rw/Makefile
@@ -1,4 +1,4 @@
-obj-$(CONFIG_ZD1211RW) += zd1211rw.o
+obj-$(CONFIG_COMPAT_ZD1211RW) += zd1211rw.o
 
 zd1211rw-objs := zd_chip.o zd_mac.o \
 		zd_rf_al2230.o zd_rf_rf2959.o \
--- a/net/bluetooth/Makefile
+++ b/net/bluetooth/Makefile
@@ -6,7 +6,7 @@ obj-$(CONFIG_BT)	+= bluetooth.o
 obj-$(CONFIG_BT_RFCOMM)	+= rfcomm/
 obj-$(CONFIG_BT_BNEP)	+= bnep/
 obj-$(CONFIG_BT_CMTP)	+= cmtp/
-obj-$(CONFIG_BT_HIDP)	+= hidp/
+obj-$(CONFIG_COMPAT_BT_HIDP)	+= hidp/
 
 bluetooth-y := af_bluetooth.o hci_core.o hci_conn.o hci_event.o mgmt.o \
 	hci_sock.o hci_sysfs.o l2cap_core.o l2cap_sock.o smp.o sco.o lib.o \
--- a/net/bluetooth/hidp/Makefile
+++ b/net/bluetooth/hidp/Makefile
@@ -2,6 +2,6 @@
 # Makefile for the Linux Bluetooth HIDP layer
 #
 
-obj-$(CONFIG_BT_HIDP) += hidp.o
+obj-$(CONFIG_COMPAT_BT_HIDP) += hidp.o
 
 hidp-objs := core.o sock.o
--- a/drivers/net/wireless/ti/wl1251/Makefile
+++ b/drivers/net/wireless/ti/wl1251/Makefile
@@ -4,7 +4,7 @@ wl1251_spi-objs		+= spi.o
 wl1251_sdio-objs	+= sdio.o
 
 obj-$(CONFIG_WL1251)		+= wl1251.o
-obj-$(CONFIG_WL1251_SPI)	+= wl1251_spi.o
-obj-$(CONFIG_WL1251_SDIO)	+= wl1251_sdio.o
+obj-$(CONFIG_COMPAT_WL1251_SPI)+= wl1251_spi.o
+obj-$(CONFIG_COMPAT_WL1251_SDIO)+= wl1251_sdio.o
 
 ccflags-y += -D__CHECK_ENDIAN__
--- a/drivers/net/wireless/ath/ath9k/Makefile
+++ b/drivers/net/wireless/ath/ath9k/Makefile
@@ -8,7 +8,7 @@ ath9k-y +=	beacon.o \
 		antenna.o
 
 ath9k-$(CONFIG_ATH9K_BTCOEX_SUPPORT) += mci.o
-ath9k-$(CONFIG_ATH9K_RATE_CONTROL) += rc.o
+ath9k-$(CONFIG_COMPAT_ATH9K_RATE_CONTROL) += rc.o
 ath9k-$(CONFIG_ATH9K_PCI) += pci.o
 ath9k-$(CONFIG_ATH9K_AHB) += ahb.o
 ath9k-$(CONFIG_ATH9K_DEBUGFS) += debug.o
--- a/drivers/net/wireless/ath/ath9k/init.c
+++ b/drivers/net/wireless/ath/ath9k/init.c
@@ -750,7 +750,7 @@ void ath9k_set_hw_capab(struct ath_softc
 	sc->ant_rx = hw->wiphy->available_antennas_rx;
 	sc->ant_tx = hw->wiphy->available_antennas_tx;
 
-#ifdef CONFIG_ATH9K_RATE_CONTROL
+#ifdef CONFIG_COMPAT_ATH9K_RATE_CONTROL
 	hw->rate_control_algorithm = "ath9k_rate_control";
 #endif
 
--- a/drivers/net/wireless/ath/ath9k/rc.h
+++ b/drivers/net/wireless/ath/ath9k/rc.h
@@ -215,7 +215,7 @@ struct ath_rate_priv {
 	struct ath_rc_stats rcstats[RATE_TABLE_SIZE];
 };
 
-#ifdef CONFIG_ATH9K_RATE_CONTROL
+#ifdef CONFIG_COMPAT_ATH9K_RATE_CONTROL
 int ath_rate_control_register(void);
 void ath_rate_control_unregister(void);
 #else
--- a/net/bluetooth/rfcomm/Makefile
+++ b/net/bluetooth/rfcomm/Makefile
@@ -5,4 +5,4 @@
 obj-$(CONFIG_BT_RFCOMM) += rfcomm.o
 
 rfcomm-y			:= core.o sock.o
-rfcomm-$(CONFIG_BT_RFCOMM_TTY)	+= tty.o
+rfcomm-$(CONFIG_COMPAT_BT_RFCOMM_TTY)	+= tty.o
--- a/include/net/bluetooth/rfcomm.h
+++ b/include/net/bluetooth/rfcomm.h
@@ -357,7 +357,7 @@ struct rfcomm_dev_list_req {
 
 int  rfcomm_dev_ioctl(struct sock *sk, unsigned int cmd, void __user *arg);
 
-#ifdef CONFIG_BT_RFCOMM_TTY
+#ifdef CONFIG_COMPAT_BT_RFCOMM_TTY
 int  rfcomm_init_ttys(void);
 void rfcomm_cleanup_ttys(void);
 #else
--- a/net/bluetooth/rfcomm/sock.c
+++ b/net/bluetooth/rfcomm/sock.c
@@ -862,7 +862,7 @@ static int rfcomm_sock_ioctl(struct sock
 	err = bt_sock_ioctl(sock, cmd, arg);
 
 	if (err == -ENOIOCTLCMD) {
-#ifdef CONFIG_BT_RFCOMM_TTY
+#ifdef CONFIG_COMPAT_BT_RFCOMM_TTY
 		lock_sock(sk);
 		err = rfcomm_dev_ioctl(sk, cmd, (void __user *) arg);
 		release_sock(sk);
